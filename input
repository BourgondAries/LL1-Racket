(* 1 2 (+ ()) 5)
(exit)

(write (error? (wind (if true
  (write (* 1 2 3 ()))
  (unwind 31234)))))

(write (head (tail (tail (tail (quote a b c))))))

(exit)
(define nth (fn (lst acc)
                (if (pair? lst)
                  (if (= acc 0)
                      (head lst)
                      (+ (nth (tail lst) (- acc 1))))
                  (unwind (error (@trace))))))
(write (wind (nth (quote a b c d e) 20)))
(not 1 2)

(write (pair (fn () ok whatever) (pair 8 (pair 5 ()))))
(write (quote (fn () ok whatever) 8 5))
(write (quote () (fn () ok whatever) 8 5))
(write (pair? (quote quick)))
(write (error (quote in numbers (haha (ha)))))
(write (error quote))
(write (" before))
(define k (fn (bra)
             (if (< bra 10)
                 (unwind (@trace))
                 (+ (k (- bra 1))))))

(write (wind (k 20)))
(exit)

(write (head (tail (tail (quote a b c d)))))
(print (nth (quote a b c d) 5))
(define max 10002)
(define v 100)
(define count (fn (a)
                  (if (not (< a max))
                      a
                      (count (+ v a)))))
(write (count 0))
(write (" after max))

Some(format!["expected String but got {}, {}", data_name(args), source]);
Some("arity mismatch, expecting N but got M".into());
Some("no argument stack".into());
